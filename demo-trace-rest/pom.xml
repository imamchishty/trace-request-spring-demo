<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.emc.awg.demo</groupId>
        <artifactId>demo-trace-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>demo-trace-rest</artifactId>
    <packaging>jar</packaging>
    <name>demo-trace-rest</name>
    <description>Module contains the restful controllers.</description>

    <properties>
        <docker.image.prefix>com.emc.awg.demo</docker.image.prefix>
    </properties>

    <dependencies>

        <!-- Internal dependencies -->

        <dependency>
            <groupId>com.emc.awg.demo</groupId>
            <artifactId>demo-trace-exception</artifactId>
        </dependency>

        <dependency>
            <groupId>com.emc.awg.demo</groupId>
            <artifactId>demo-trace-model</artifactId>
        </dependency>

        <dependency>
            <groupId>com.emc.awg.demo</groupId>
            <artifactId>demo-trace-service</artifactId>
        </dependency>

        <!-- Shedhack -->

        <dependency>
            <groupId>com.shedhack.trace</groupId>
            <artifactId>trace-request-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.trace</groupId>
            <artifactId>trace-request-filter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.trace</groupId>
            <artifactId>trace-request-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.exception</groupId>
            <artifactId>exception-controller-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.exception</groupId>
            <artifactId>exception-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.thread</groupId>
            <artifactId>thread-context-aspect</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shedhack.spring</groupId>
            <artifactId>spring-actuator</artifactId>
        </dependency>

        <!-- Spring -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator-docs</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>hal-browser</artifactId>
        </dependency>

        <!-- DB added for inmemory purposes, change accordingly -->
        <!-- This db is also used by the trace-request-jpa module and the settings are
        set in the application.yml -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Config server, see bootstrap.yml -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-ribbon</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
        </dependency>

        <!-- Swagger http://host:port/docs-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- reloads the application when changes detected -->
        <!-- for intellij you need to Build>Make Project to cause changes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>demo-trace-rest</finalName>

        <!-- Added to override properties-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>

            <!-- Git properties -->
            <!-- Initial build will fail unless you add to git, uncomment when ready.
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/git-build.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <dateFormat>dd.MM.yyyy HH:mm:ss z</dateFormat>
                </configuration>
            </plugin> -->

            <!-- Filtering, mvn resources:resources, maven will replace props using @,
            for example you want @pom.version@ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>

            <!-- mvn spring-boot:run -Dserver.port=8081 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>

                    <!-- Helps with automatic restart when files are changed.-->
                    <fork>true</fork>
                </configuration>
            </plugin>

            <!-- Creates the necessary docker file -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.3.1</version>
                <configuration>

                    <!-- You might need to remove dockerHost and let it default. This has been set for boot2docker -->
                    <!-- When boot2docker starts you'll see, so export them!:
                            To connect the Docker client to the Docker daemon, please set:
                            export DOCKER_HOST=tcp://192.168.59.103:2376
                            export DOCKER_CERT_PATH=/Users/ichishty/.boot2docker/certs/boot2docker-vm
                            export DOCKER_TLS_VERIFY=1
                    -->
                    <dockerHost>https://192.168.59.103:2376</dockerHost>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>